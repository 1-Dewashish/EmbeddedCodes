
stm32g491re_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000678  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000850  08000858  00001858  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000850  08000850  00001858  2**0
                  CONTENTS
  4 .ARM          00000000  08000850  08000850  00001858  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000850  08000858  00001858  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000850  08000850  00001850  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000854  08000854  00001854  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00001858  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmsram      00000000  10000000  10000000  00001858  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a6e  00000000  00000000  00001882  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002a3  00000000  00000000  000022f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002598  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00002658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ced  00000000  00000000  000026dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000629d  00000000  00000000  000033ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00009667  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  000096ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000054  00000000  00000000  000098f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00000d7d  00000000  00000000  0000994c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000000 	.word	0x20000000
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08000838 	.word	0x08000838

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000004 	.word	0x20000004
 8000214:	08000838 	.word	0x08000838

08000218 <delay>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

// Simple for loop delay
void delay(void){
 8000218:	b480      	push	{r7}
 800021a:	b083      	sub	sp, #12
 800021c:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i<500000;i++);
 800021e:	2300      	movs	r3, #0
 8000220:	607b      	str	r3, [r7, #4]
 8000222:	e002      	b.n	800022a <delay+0x12>
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	3301      	adds	r3, #1
 8000228:	607b      	str	r3, [r7, #4]
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4a04      	ldr	r2, [pc, #16]	@ (8000240 <delay+0x28>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d9f8      	bls.n	8000224 <delay+0xc>
}
 8000232:	bf00      	nop
 8000234:	bf00      	nop
 8000236:	370c      	adds	r7, #12
 8000238:	46bd      	mov	sp, r7
 800023a:	bc80      	pop	{r7}
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	0007a11f 	.word	0x0007a11f

08000244 <main>:


int main(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	b086      	sub	sp, #24
 8000248:	af00      	add	r7, sp, #0
	/*Created a GPIO Handle for on board LED connected to GPIOA 5*/
	GPIO_Handle_t led;
	led.pGPIO = GPIOA;
 800024a:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800024e:	60fb      	str	r3, [r7, #12]
	led.GPIO_Pinconfig.GPIO_PinNumber = 5;
 8000250:	2305      	movs	r3, #5
 8000252:	743b      	strb	r3, [r7, #16]
	led.GPIO_Pinconfig.GPIO_PinMode = OUTPUT;
 8000254:	2301      	movs	r3, #1
 8000256:	747b      	strb	r3, [r7, #17]
	led.GPIO_Pinconfig.GPIO_PinOPType = PUSH_PULL;
 8000258:	2300      	movs	r3, #0
 800025a:	753b      	strb	r3, [r7, #20]
	led.GPIO_Pinconfig.GPIO_PinSpeed = MEDIUM_SPEED;
 800025c:	2301      	movs	r3, #1
 800025e:	74bb      	strb	r3, [r7, #18]
	led.GPIO_Pinconfig.GPIO_PinPuPdControl= NO_PUPD;
 8000260:	2300      	movs	r3, #0
 8000262:	74fb      	strb	r3, [r7, #19]

	/*Created a GPIO Handle for on board USER_BUTTON connected to GPIOC 13*/
	GPIO_Handle_t button;
	button.pGPIO = GPIOC;
 8000264:	4b15      	ldr	r3, [pc, #84]	@ (80002bc <main+0x78>)
 8000266:	603b      	str	r3, [r7, #0]
	button.GPIO_Pinconfig.GPIO_PinNumber =13;
 8000268:	230d      	movs	r3, #13
 800026a:	713b      	strb	r3, [r7, #4]
	button.GPIO_Pinconfig.GPIO_PinMode = INPUT;
 800026c:	2300      	movs	r3, #0
 800026e:	717b      	strb	r3, [r7, #5]
	button.GPIO_Pinconfig.GPIO_PinSpeed = HIGH_SPEED;
 8000270:	2302      	movs	r3, #2
 8000272:	71bb      	strb	r3, [r7, #6]
	button.GPIO_Pinconfig.GPIO_PinPuPdControl = PD;
 8000274:	2302      	movs	r3, #2
 8000276:	71fb      	strb	r3, [r7, #7]

	/*Enabling GPIOs clock*/
	GPIO_PCLKControl(GPIOA,ENABLE);
 8000278:	2101      	movs	r1, #1
 800027a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800027e:	f000 f849 	bl	8000314 <GPIO_PCLKControl>
	GPIO_PCLKControl(GPIOC,ENABLE);
 8000282:	2101      	movs	r1, #1
 8000284:	480d      	ldr	r0, [pc, #52]	@ (80002bc <main+0x78>)
 8000286:	f000 f845 	bl	8000314 <GPIO_PCLKControl>

	/*Passing GPIO handle*/
	GPIO_INIT(&led);
 800028a:	f107 030c 	add.w	r3, r7, #12
 800028e:	4618      	mov	r0, r3
 8000290:	f000 f8f8 	bl	8000484 <GPIO_INIT>
	GPIO_INIT(&button);
 8000294:	463b      	mov	r3, r7
 8000296:	4618      	mov	r0, r3
 8000298:	f000 f8f4 	bl	8000484 <GPIO_INIT>


	while(1){
		/*This while loop continuously checks the button status and if button is pressed LED is toggled*/

		if (GPIO_ReadFromInputPin(GPIOC, 13)){
 800029c:	210d      	movs	r1, #13
 800029e:	4807      	ldr	r0, [pc, #28]	@ (80002bc <main+0x78>)
 80002a0:	f000 fa7e 	bl	80007a0 <GPIO_ReadFromInputPin>
 80002a4:	4603      	mov	r3, r0
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	d0f8      	beq.n	800029c <main+0x58>
			/*added delay for suppressing de-bouncing*/
 			delay();
 80002aa:	f7ff ffb5 	bl	8000218 <delay>
			GPIO_ToggleOutputPin(GPIOA,5);
 80002ae:	2105      	movs	r1, #5
 80002b0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80002b4:	f000 fa88 	bl	80007c8 <GPIO_ToggleOutputPin>
		if (GPIO_ReadFromInputPin(GPIOC, 13)){
 80002b8:	e7f0      	b.n	800029c <main+0x58>
 80002ba:	bf00      	nop
 80002bc:	48000800 	.word	0x48000800

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	@ (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	@ (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	@ (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	@ (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	@ (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	@ (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 fa7f 	bl	80007f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ffa7 	bl	8000244 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	2001c000 	.word	0x2001c000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	08000858 	.word	0x08000858
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC1_2_IRQHandler>
	...

08000314 <GPIO_PCLKControl>:
#include "stm32g491re.h"
#include "stm32g491re_gpio_driver.h"


/********GPIO CLK enable*********/
void GPIO_PCLKControl(GPIO_RegDef_t *pGPIO, uint8_t ENorDI ){
 8000314:	b480      	push	{r7}
 8000316:	b083      	sub	sp, #12
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
 800031c:	460b      	mov	r3, r1
 800031e:	70fb      	strb	r3, [r7, #3]

	if (ENorDI == ENABLE){
 8000320:	78fb      	ldrb	r3, [r7, #3]
 8000322:	2b01      	cmp	r3, #1
 8000324:	d14c      	bne.n	80003c0 <GPIO_PCLKControl+0xac>
		if (pGPIO == GPIOA){
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800032c:	d106      	bne.n	800033c <GPIO_PCLKControl+0x28>
			GPIOA_PCLK_EN();
 800032e:	4b4e      	ldr	r3, [pc, #312]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000330:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000332:	4a4d      	ldr	r2, [pc, #308]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000334:	f043 0301 	orr.w	r3, r3, #1
 8000338:	64d3      	str	r3, [r2, #76]	@ 0x4c
			GPIOF_PCLK_DI();
		}else if(pGPIO == GPIOG){
			GPIOG_PCLK_DI();
		}
	}
}
 800033a:	e090      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if (pGPIO == GPIOB){
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a4b      	ldr	r2, [pc, #300]	@ (800046c <GPIO_PCLKControl+0x158>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PCLKControl+0x3e>
			GPIOB_PCLK_EN();
 8000344:	4b48      	ldr	r3, [pc, #288]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000346:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000348:	4a47      	ldr	r2, [pc, #284]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800034a:	f043 0302 	orr.w	r3, r3, #2
 800034e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000350:	e085      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOC){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a46      	ldr	r2, [pc, #280]	@ (8000470 <GPIO_PCLKControl+0x15c>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PCLKControl+0x54>
			GPIOC_PCLK_EN();
 800035a:	4b43      	ldr	r3, [pc, #268]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800035c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800035e:	4a42      	ldr	r2, [pc, #264]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000360:	f043 0304 	orr.w	r3, r3, #4
 8000364:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000366:	e07a      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOD){
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a42      	ldr	r2, [pc, #264]	@ (8000474 <GPIO_PCLKControl+0x160>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PCLKControl+0x6a>
			GPIOD_PCLK_EN();
 8000370:	4b3d      	ldr	r3, [pc, #244]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000372:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000374:	4a3c      	ldr	r2, [pc, #240]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000376:	f043 0308 	orr.w	r3, r3, #8
 800037a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800037c:	e06f      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOE){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a3d      	ldr	r2, [pc, #244]	@ (8000478 <GPIO_PCLKControl+0x164>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PCLKControl+0x80>
			GPIOE_PCLK_EN();
 8000386:	4b38      	ldr	r3, [pc, #224]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000388:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800038a:	4a37      	ldr	r2, [pc, #220]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800038c:	f043 0310 	orr.w	r3, r3, #16
 8000390:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000392:	e064      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOF){
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a39      	ldr	r2, [pc, #228]	@ (800047c <GPIO_PCLKControl+0x168>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PCLKControl+0x96>
			GPIOF_PCLK_EN();
 800039c:	4b32      	ldr	r3, [pc, #200]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800039e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003a0:	4a31      	ldr	r2, [pc, #196]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003a2:	f043 0320 	orr.w	r3, r3, #32
 80003a6:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003a8:	e059      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOG){
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a34      	ldr	r2, [pc, #208]	@ (8000480 <GPIO_PCLKControl+0x16c>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d155      	bne.n	800045e <GPIO_PCLKControl+0x14a>
			GPIOG_PCLK_EN();
 80003b2:	4b2d      	ldr	r3, [pc, #180]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003b6:	4a2c      	ldr	r2, [pc, #176]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003bc:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003be:	e04e      	b.n	800045e <GPIO_PCLKControl+0x14a>
	} else if(ENorDI == DISABLE){
 80003c0:	78fb      	ldrb	r3, [r7, #3]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	d14b      	bne.n	800045e <GPIO_PCLKControl+0x14a>
		if (pGPIO == GPIOA){
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80003cc:	d106      	bne.n	80003dc <GPIO_PCLKControl+0xc8>
			GPIOA_PCLK_DI();
 80003ce:	4b26      	ldr	r3, [pc, #152]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003d2:	4a25      	ldr	r2, [pc, #148]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003d4:	f023 0301 	bic.w	r3, r3, #1
 80003d8:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003da:	e040      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if (pGPIO == GPIOB){
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a23      	ldr	r2, [pc, #140]	@ (800046c <GPIO_PCLKControl+0x158>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d106      	bne.n	80003f2 <GPIO_PCLKControl+0xde>
			GPIOB_PCLK_DI();
 80003e4:	4b20      	ldr	r3, [pc, #128]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003e8:	4a1f      	ldr	r2, [pc, #124]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003ea:	f023 0302 	bic.w	r3, r3, #2
 80003ee:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003f0:	e035      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOC){
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4a1e      	ldr	r2, [pc, #120]	@ (8000470 <GPIO_PCLKControl+0x15c>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d106      	bne.n	8000408 <GPIO_PCLKControl+0xf4>
			GPIOC_PCLK_DI();
 80003fa:	4b1b      	ldr	r3, [pc, #108]	@ (8000468 <GPIO_PCLKControl+0x154>)
 80003fc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003fe:	4a1a      	ldr	r2, [pc, #104]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000400:	f023 0304 	bic.w	r3, r3, #4
 8000404:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000406:	e02a      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOD){
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a1a      	ldr	r2, [pc, #104]	@ (8000474 <GPIO_PCLKControl+0x160>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d106      	bne.n	800041e <GPIO_PCLKControl+0x10a>
			GPIOD_PCLK_DI();
 8000410:	4b15      	ldr	r3, [pc, #84]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000412:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000414:	4a14      	ldr	r2, [pc, #80]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000416:	f023 0308 	bic.w	r3, r3, #8
 800041a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800041c:	e01f      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOE){
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4a15      	ldr	r2, [pc, #84]	@ (8000478 <GPIO_PCLKControl+0x164>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d106      	bne.n	8000434 <GPIO_PCLKControl+0x120>
			GPIOE_PCLK_DI();
 8000426:	4b10      	ldr	r3, [pc, #64]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000428:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800042a:	4a0f      	ldr	r2, [pc, #60]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800042c:	f023 0310 	bic.w	r3, r3, #16
 8000430:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000432:	e014      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOF){
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a11      	ldr	r2, [pc, #68]	@ (800047c <GPIO_PCLKControl+0x168>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d106      	bne.n	800044a <GPIO_PCLKControl+0x136>
			GPIOF_PCLK_DI();
 800043c:	4b0a      	ldr	r3, [pc, #40]	@ (8000468 <GPIO_PCLKControl+0x154>)
 800043e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000440:	4a09      	ldr	r2, [pc, #36]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000442:	f023 0320 	bic.w	r3, r3, #32
 8000446:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000448:	e009      	b.n	800045e <GPIO_PCLKControl+0x14a>
		}else if(pGPIO == GPIOG){
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4a0c      	ldr	r2, [pc, #48]	@ (8000480 <GPIO_PCLKControl+0x16c>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d105      	bne.n	800045e <GPIO_PCLKControl+0x14a>
			GPIOG_PCLK_DI();
 8000452:	4b05      	ldr	r3, [pc, #20]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000454:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000456:	4a04      	ldr	r2, [pc, #16]	@ (8000468 <GPIO_PCLKControl+0x154>)
 8000458:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800045c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800045e:	bf00      	nop
 8000460:	370c      	adds	r7, #12
 8000462:	46bd      	mov	sp, r7
 8000464:	bc80      	pop	{r7}
 8000466:	4770      	bx	lr
 8000468:	40021000 	.word	0x40021000
 800046c:	48000400 	.word	0x48000400
 8000470:	48000800 	.word	0x48000800
 8000474:	48000c00 	.word	0x48000c00
 8000478:	48001000 	.word	0x48001000
 800047c:	48001400 	.word	0x48001400
 8000480:	48001800 	.word	0x48001800

08000484 <GPIO_INIT>:

/****GPIO INIT/DINIT****/
void GPIO_INIT(GPIO_Handle_t *pGPIOHandle){
 8000484:	b580      	push	{r7, lr}
 8000486:	b084      	sub	sp, #16
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]

	GPIO_PCLKControl(pGPIOHandle->pGPIO,ENABLE );
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	2101      	movs	r1, #1
 8000492:	4618      	mov	r0, r3
 8000494:	f7ff ff3e 	bl	8000314 <GPIO_PCLKControl>
	uint32_t temp1 , temp2;

	if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == ALT_Function ){
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	2b02      	cmp	r3, #2
 800049e:	d132      	bne.n	8000506 <GPIO_INIT+0x82>

					temp1 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber/8;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	08db      	lsrs	r3, r3, #3
 80004a6:	b2db      	uxtb	r3, r3
 80004a8:	60fb      	str	r3, [r7, #12]
					temp2 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber%8;
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	f003 0307 	and.w	r3, r3, #7
 80004b2:	60bb      	str	r3, [r7, #8]
					pGPIOHandle->pGPIO->AFR[temp1] &= ~(0b1111  << (4*temp2));
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	68fa      	ldr	r2, [r7, #12]
 80004ba:	3208      	adds	r2, #8
 80004bc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004c0:	68bb      	ldr	r3, [r7, #8]
 80004c2:	009b      	lsls	r3, r3, #2
 80004c4:	210f      	movs	r1, #15
 80004c6:	fa01 f303 	lsl.w	r3, r1, r3
 80004ca:	43db      	mvns	r3, r3
 80004cc:	4619      	mov	r1, r3
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	4011      	ands	r1, r2
 80004d4:	68fa      	ldr	r2, [r7, #12]
 80004d6:	3208      	adds	r2, #8
 80004d8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
					pGPIOHandle->pGPIO->AFR[temp1] |= (pGPIOHandle->GPIO_Pinconfig.GPIO_PinAltFunMode <<( 4 *temp2));
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	68fa      	ldr	r2, [r7, #12]
 80004e2:	3208      	adds	r2, #8
 80004e4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	7a5b      	ldrb	r3, [r3, #9]
 80004ec:	4619      	mov	r1, r3
 80004ee:	68bb      	ldr	r3, [r7, #8]
 80004f0:	009b      	lsls	r3, r3, #2
 80004f2:	fa01 f303 	lsl.w	r3, r1, r3
 80004f6:	4619      	mov	r1, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4311      	orrs	r1, r2
 80004fe:	68fa      	ldr	r2, [r7, #12]
 8000500:	3208      	adds	r2, #8
 8000502:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				}

	//2.Configure the GPIO SPEED
	pGPIOHandle->pGPIO->OSPEEDR&=  ~(0x3 <<(2*pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	689a      	ldr	r2, [r3, #8]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	791b      	ldrb	r3, [r3, #4]
 8000510:	005b      	lsls	r3, r3, #1
 8000512:	2103      	movs	r1, #3
 8000514:	fa01 f303 	lsl.w	r3, r1, r3
 8000518:	43db      	mvns	r3, r3
 800051a:	4619      	mov	r1, r3
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	400a      	ands	r2, r1
 8000522:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIO->OSPEEDR |= (pGPIOHandle->GPIO_Pinconfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	689a      	ldr	r2, [r3, #8]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	799b      	ldrb	r3, [r3, #6]
 800052e:	4619      	mov	r1, r3
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	fa01 f303 	lsl.w	r3, r1, r3
 800053a:	4619      	mov	r1, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	430a      	orrs	r2, r1
 8000542:	609a      	str	r2, [r3, #8]

	//3.Configure the GPIO PUPD
	pGPIOHandle->pGPIO->PUPDR&=  ~(0x3 <<(2* pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	68da      	ldr	r2, [r3, #12]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	791b      	ldrb	r3, [r3, #4]
 800054e:	005b      	lsls	r3, r3, #1
 8000550:	2103      	movs	r1, #3
 8000552:	fa01 f303 	lsl.w	r3, r1, r3
 8000556:	43db      	mvns	r3, r3
 8000558:	4619      	mov	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIO->PUPDR |= (pGPIOHandle->GPIO_Pinconfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	68da      	ldr	r2, [r3, #12]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	79db      	ldrb	r3, [r3, #7]
 800056c:	4619      	mov	r1, r3
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	791b      	ldrb	r3, [r3, #4]
 8000572:	005b      	lsls	r3, r3, #1
 8000574:	fa01 f303 	lsl.w	r3, r1, r3
 8000578:	4619      	mov	r1, r3
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	430a      	orrs	r2, r1
 8000580:	60da      	str	r2, [r3, #12]

	//4.Configure the GPIO OTYPE
	pGPIOHandle->pGPIO->OTYPER &= ~(1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	685a      	ldr	r2, [r3, #4]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	4619      	mov	r1, r3
 800058e:	2301      	movs	r3, #1
 8000590:	408b      	lsls	r3, r1
 8000592:	43db      	mvns	r3, r3
 8000594:	4619      	mov	r1, r3
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	400a      	ands	r2, r1
 800059c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIO->OTYPER |= (pGPIOHandle->GPIO_Pinconfig.GPIO_PinOPType << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	685a      	ldr	r2, [r3, #4]
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	7a1b      	ldrb	r3, [r3, #8]
 80005a8:	4619      	mov	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	791b      	ldrb	r3, [r3, #4]
 80005ae:	fa01 f303 	lsl.w	r3, r1, r3
 80005b2:	4619      	mov	r1, r3
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	430a      	orrs	r2, r1
 80005ba:	605a      	str	r2, [r3, #4]

	//1.Configure the GPIO MODE
		if (pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode <= Analog){
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	795b      	ldrb	r3, [r3, #5]
 80005c0:	2b03      	cmp	r3, #3
 80005c2:	d81f      	bhi.n	8000604 <GPIO_INIT+0x180>
			pGPIOHandle->pGPIO->MODER &= ~(0x3 <<(2*pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	681a      	ldr	r2, [r3, #0]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	005b      	lsls	r3, r3, #1
 80005d0:	2103      	movs	r1, #3
 80005d2:	fa01 f303 	lsl.w	r3, r1, r3
 80005d6:	43db      	mvns	r3, r3
 80005d8:	4619      	mov	r1, r3
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	400a      	ands	r2, r1
 80005e0:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIO->MODER |= (pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	681a      	ldr	r2, [r3, #0]
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	795b      	ldrb	r3, [r3, #5]
 80005ec:	4619      	mov	r1, r3
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	005b      	lsls	r3, r3, #1
 80005f4:	fa01 f303 	lsl.w	r3, r1, r3
 80005f8:	4619      	mov	r1, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	430a      	orrs	r2, r1
 8000600:	601a      	str	r2, [r3, #0]

			EXTI->EXTI_IMR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
		}


}
 8000602:	e0b6      	b.n	8000772 <GPIO_INIT+0x2ee>
			GPIOC->MODER &= ~(3U << (13 * 2));
 8000604:	4b5d      	ldr	r3, [pc, #372]	@ (800077c <GPIO_INIT+0x2f8>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a5c      	ldr	r2, [pc, #368]	@ (800077c <GPIO_INIT+0x2f8>)
 800060a:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800060e:	6013      	str	r3, [r2, #0]
			if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == FT){
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	795b      	ldrb	r3, [r3, #5]
 8000614:	2b05      	cmp	r3, #5
 8000616:	d117      	bne.n	8000648 <GPIO_INIT+0x1c4>
				 EXTI->EXTI_RTSR1 &= ~(1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000618:	4b59      	ldr	r3, [pc, #356]	@ (8000780 <GPIO_INIT+0x2fc>)
 800061a:	689b      	ldr	r3, [r3, #8]
 800061c:	687a      	ldr	r2, [r7, #4]
 800061e:	7912      	ldrb	r2, [r2, #4]
 8000620:	4611      	mov	r1, r2
 8000622:	2201      	movs	r2, #1
 8000624:	408a      	lsls	r2, r1
 8000626:	43d2      	mvns	r2, r2
 8000628:	4611      	mov	r1, r2
 800062a:	4a55      	ldr	r2, [pc, #340]	@ (8000780 <GPIO_INIT+0x2fc>)
 800062c:	400b      	ands	r3, r1
 800062e:	6093      	str	r3, [r2, #8]
				 EXTI->EXTI_FTSR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000630:	4b53      	ldr	r3, [pc, #332]	@ (8000780 <GPIO_INIT+0x2fc>)
 8000632:	68db      	ldr	r3, [r3, #12]
 8000634:	687a      	ldr	r2, [r7, #4]
 8000636:	7912      	ldrb	r2, [r2, #4]
 8000638:	4611      	mov	r1, r2
 800063a:	2201      	movs	r2, #1
 800063c:	408a      	lsls	r2, r1
 800063e:	4611      	mov	r1, r2
 8000640:	4a4f      	ldr	r2, [pc, #316]	@ (8000780 <GPIO_INIT+0x2fc>)
 8000642:	430b      	orrs	r3, r1
 8000644:	60d3      	str	r3, [r2, #12]
 8000646:	e035      	b.n	80006b4 <GPIO_INIT+0x230>
			}else if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == RT){
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	795b      	ldrb	r3, [r3, #5]
 800064c:	2b04      	cmp	r3, #4
 800064e:	d117      	bne.n	8000680 <GPIO_INIT+0x1fc>
				 EXTI->EXTI_FTSR1 &= ~(1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000650:	4b4b      	ldr	r3, [pc, #300]	@ (8000780 <GPIO_INIT+0x2fc>)
 8000652:	68db      	ldr	r3, [r3, #12]
 8000654:	687a      	ldr	r2, [r7, #4]
 8000656:	7912      	ldrb	r2, [r2, #4]
 8000658:	4611      	mov	r1, r2
 800065a:	2201      	movs	r2, #1
 800065c:	408a      	lsls	r2, r1
 800065e:	43d2      	mvns	r2, r2
 8000660:	4611      	mov	r1, r2
 8000662:	4a47      	ldr	r2, [pc, #284]	@ (8000780 <GPIO_INIT+0x2fc>)
 8000664:	400b      	ands	r3, r1
 8000666:	60d3      	str	r3, [r2, #12]
				 EXTI->EXTI_RTSR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000668:	4b45      	ldr	r3, [pc, #276]	@ (8000780 <GPIO_INIT+0x2fc>)
 800066a:	689b      	ldr	r3, [r3, #8]
 800066c:	687a      	ldr	r2, [r7, #4]
 800066e:	7912      	ldrb	r2, [r2, #4]
 8000670:	4611      	mov	r1, r2
 8000672:	2201      	movs	r2, #1
 8000674:	408a      	lsls	r2, r1
 8000676:	4611      	mov	r1, r2
 8000678:	4a41      	ldr	r2, [pc, #260]	@ (8000780 <GPIO_INIT+0x2fc>)
 800067a:	430b      	orrs	r3, r1
 800067c:	6093      	str	r3, [r2, #8]
 800067e:	e019      	b.n	80006b4 <GPIO_INIT+0x230>
			}else if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == RT_FT){
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	795b      	ldrb	r3, [r3, #5]
 8000684:	2b06      	cmp	r3, #6
 8000686:	d115      	bne.n	80006b4 <GPIO_INIT+0x230>
				EXTI->EXTI_FTSR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8000688:	4b3d      	ldr	r3, [pc, #244]	@ (8000780 <GPIO_INIT+0x2fc>)
 800068a:	68db      	ldr	r3, [r3, #12]
 800068c:	687a      	ldr	r2, [r7, #4]
 800068e:	7912      	ldrb	r2, [r2, #4]
 8000690:	4611      	mov	r1, r2
 8000692:	2201      	movs	r2, #1
 8000694:	408a      	lsls	r2, r1
 8000696:	4611      	mov	r1, r2
 8000698:	4a39      	ldr	r2, [pc, #228]	@ (8000780 <GPIO_INIT+0x2fc>)
 800069a:	430b      	orrs	r3, r1
 800069c:	60d3      	str	r3, [r2, #12]
				EXTI->EXTI_RTSR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 800069e:	4b38      	ldr	r3, [pc, #224]	@ (8000780 <GPIO_INIT+0x2fc>)
 80006a0:	689b      	ldr	r3, [r3, #8]
 80006a2:	687a      	ldr	r2, [r7, #4]
 80006a4:	7912      	ldrb	r2, [r2, #4]
 80006a6:	4611      	mov	r1, r2
 80006a8:	2201      	movs	r2, #1
 80006aa:	408a      	lsls	r2, r1
 80006ac:	4611      	mov	r1, r2
 80006ae:	4a34      	ldr	r2, [pc, #208]	@ (8000780 <GPIO_INIT+0x2fc>)
 80006b0:	430b      	orrs	r3, r1
 80006b2:	6093      	str	r3, [r2, #8]
			temp1 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber/4;
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	791b      	ldrb	r3, [r3, #4]
 80006b8:	089b      	lsrs	r3, r3, #2
 80006ba:	b2db      	uxtb	r3, r3
 80006bc:	60fb      	str	r3, [r7, #12]
			temp2 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber%4;
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	791b      	ldrb	r3, [r3, #4]
 80006c2:	f003 0303 	and.w	r3, r3, #3
 80006c6:	60bb      	str	r3, [r7, #8]
			SYSCFG_PCLK_EN();
 80006c8:	4b2e      	ldr	r3, [pc, #184]	@ (8000784 <GPIO_INIT+0x300>)
 80006ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80006cc:	4a2d      	ldr	r2, [pc, #180]	@ (8000784 <GPIO_INIT+0x300>)
 80006ce:	f043 0301 	orr.w	r3, r3, #1
 80006d2:	6613      	str	r3, [r2, #96]	@ 0x60
			SYSCFG->SYSCFG_EXTICR[temp1] |=  portcode(pGPIOHandle->pGPIO)<<(4* temp2);
 80006d4:	4a2c      	ldr	r2, [pc, #176]	@ (8000788 <GPIO_INIT+0x304>)
 80006d6:	68fb      	ldr	r3, [r7, #12]
 80006d8:	3302      	adds	r3, #2
 80006da:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80006e6:	d02b      	beq.n	8000740 <GPIO_INIT+0x2bc>
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	4927      	ldr	r1, [pc, #156]	@ (800078c <GPIO_INIT+0x308>)
 80006ee:	428b      	cmp	r3, r1
 80006f0:	d024      	beq.n	800073c <GPIO_INIT+0x2b8>
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4921      	ldr	r1, [pc, #132]	@ (800077c <GPIO_INIT+0x2f8>)
 80006f8:	428b      	cmp	r3, r1
 80006fa:	d01d      	beq.n	8000738 <GPIO_INIT+0x2b4>
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4923      	ldr	r1, [pc, #140]	@ (8000790 <GPIO_INIT+0x30c>)
 8000702:	428b      	cmp	r3, r1
 8000704:	d016      	beq.n	8000734 <GPIO_INIT+0x2b0>
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	4922      	ldr	r1, [pc, #136]	@ (8000794 <GPIO_INIT+0x310>)
 800070c:	428b      	cmp	r3, r1
 800070e:	d00f      	beq.n	8000730 <GPIO_INIT+0x2ac>
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	4920      	ldr	r1, [pc, #128]	@ (8000798 <GPIO_INIT+0x314>)
 8000716:	428b      	cmp	r3, r1
 8000718:	d008      	beq.n	800072c <GPIO_INIT+0x2a8>
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	491f      	ldr	r1, [pc, #124]	@ (800079c <GPIO_INIT+0x318>)
 8000720:	428b      	cmp	r3, r1
 8000722:	d101      	bne.n	8000728 <GPIO_INIT+0x2a4>
 8000724:	2306      	movs	r3, #6
 8000726:	e00c      	b.n	8000742 <GPIO_INIT+0x2be>
 8000728:	2300      	movs	r3, #0
 800072a:	e00a      	b.n	8000742 <GPIO_INIT+0x2be>
 800072c:	2305      	movs	r3, #5
 800072e:	e008      	b.n	8000742 <GPIO_INIT+0x2be>
 8000730:	2304      	movs	r3, #4
 8000732:	e006      	b.n	8000742 <GPIO_INIT+0x2be>
 8000734:	2303      	movs	r3, #3
 8000736:	e004      	b.n	8000742 <GPIO_INIT+0x2be>
 8000738:	2302      	movs	r3, #2
 800073a:	e002      	b.n	8000742 <GPIO_INIT+0x2be>
 800073c:	2301      	movs	r3, #1
 800073e:	e000      	b.n	8000742 <GPIO_INIT+0x2be>
 8000740:	2300      	movs	r3, #0
 8000742:	68b9      	ldr	r1, [r7, #8]
 8000744:	0089      	lsls	r1, r1, #2
 8000746:	408b      	lsls	r3, r1
 8000748:	490f      	ldr	r1, [pc, #60]	@ (8000788 <GPIO_INIT+0x304>)
 800074a:	431a      	orrs	r2, r3
 800074c:	68fb      	ldr	r3, [r7, #12]
 800074e:	3302      	adds	r3, #2
 8000750:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			temp1 =0;
 8000754:	2300      	movs	r3, #0
 8000756:	60fb      	str	r3, [r7, #12]
			temp2=0;
 8000758:	2300      	movs	r3, #0
 800075a:	60bb      	str	r3, [r7, #8]
			EXTI->EXTI_IMR1 |= (1 <<pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 800075c:	4b08      	ldr	r3, [pc, #32]	@ (8000780 <GPIO_INIT+0x2fc>)
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	687a      	ldr	r2, [r7, #4]
 8000762:	7912      	ldrb	r2, [r2, #4]
 8000764:	4611      	mov	r1, r2
 8000766:	2201      	movs	r2, #1
 8000768:	408a      	lsls	r2, r1
 800076a:	4611      	mov	r1, r2
 800076c:	4a04      	ldr	r2, [pc, #16]	@ (8000780 <GPIO_INIT+0x2fc>)
 800076e:	430b      	orrs	r3, r1
 8000770:	6013      	str	r3, [r2, #0]
}
 8000772:	bf00      	nop
 8000774:	3710      	adds	r7, #16
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}
 800077a:	bf00      	nop
 800077c:	48000800 	.word	0x48000800
 8000780:	40010400 	.word	0x40010400
 8000784:	40021000 	.word	0x40021000
 8000788:	40010000 	.word	0x40010000
 800078c:	48000400 	.word	0x48000400
 8000790:	48000c00 	.word	0x48000c00
 8000794:	48001000 	.word	0x48001000
 8000798:	48001400 	.word	0x48001400
 800079c:	48001800 	.word	0x48001800

080007a0 <GPIO_ReadFromInputPin>:
}



/****GPIO READ/WRITE TO PORT/PIN****/
uint8_t	 GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIO, uint8_t PinNumber){
 80007a0:	b480      	push	{r7}
 80007a2:	b083      	sub	sp, #12
 80007a4:	af00      	add	r7, sp, #0
 80007a6:	6078      	str	r0, [r7, #4]
 80007a8:	460b      	mov	r3, r1
 80007aa:	70fb      	strb	r3, [r7, #3]

	return ((uint8_t) ((pGPIO->IDR >>PinNumber ) & 0x1));
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	691a      	ldr	r2, [r3, #16]
 80007b0:	78fb      	ldrb	r3, [r7, #3]
 80007b2:	fa22 f303 	lsr.w	r3, r2, r3
 80007b6:	b2db      	uxtb	r3, r3
 80007b8:	f003 0301 	and.w	r3, r3, #1
 80007bc:	b2db      	uxtb	r3, r3
}
 80007be:	4618      	mov	r0, r3
 80007c0:	370c      	adds	r7, #12
 80007c2:	46bd      	mov	sp, r7
 80007c4:	bc80      	pop	{r7}
 80007c6:	4770      	bx	lr

080007c8 <GPIO_ToggleOutputPin>:
}

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIO,uint16_t value){
	pGPIO->ODR |= value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIO, uint8_t PinNumber){
 80007c8:	b480      	push	{r7}
 80007ca:	b083      	sub	sp, #12
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
 80007d0:	460b      	mov	r3, r1
 80007d2:	70fb      	strb	r3, [r7, #3]
	pGPIO->ODR ^= (1 <<PinNumber);
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	695b      	ldr	r3, [r3, #20]
 80007d8:	78fa      	ldrb	r2, [r7, #3]
 80007da:	2101      	movs	r1, #1
 80007dc:	fa01 f202 	lsl.w	r2, r1, r2
 80007e0:	405a      	eors	r2, r3
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	615a      	str	r2, [r3, #20]
}
 80007e6:	bf00      	nop
 80007e8:	370c      	adds	r7, #12
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bc80      	pop	{r7}
 80007ee:	4770      	bx	lr

080007f0 <__libc_init_array>:
 80007f0:	b570      	push	{r4, r5, r6, lr}
 80007f2:	4d0d      	ldr	r5, [pc, #52]	@ (8000828 <__libc_init_array+0x38>)
 80007f4:	4c0d      	ldr	r4, [pc, #52]	@ (800082c <__libc_init_array+0x3c>)
 80007f6:	1b64      	subs	r4, r4, r5
 80007f8:	10a4      	asrs	r4, r4, #2
 80007fa:	2600      	movs	r6, #0
 80007fc:	42a6      	cmp	r6, r4
 80007fe:	d109      	bne.n	8000814 <__libc_init_array+0x24>
 8000800:	4d0b      	ldr	r5, [pc, #44]	@ (8000830 <__libc_init_array+0x40>)
 8000802:	4c0c      	ldr	r4, [pc, #48]	@ (8000834 <__libc_init_array+0x44>)
 8000804:	f000 f818 	bl	8000838 <_init>
 8000808:	1b64      	subs	r4, r4, r5
 800080a:	10a4      	asrs	r4, r4, #2
 800080c:	2600      	movs	r6, #0
 800080e:	42a6      	cmp	r6, r4
 8000810:	d105      	bne.n	800081e <__libc_init_array+0x2e>
 8000812:	bd70      	pop	{r4, r5, r6, pc}
 8000814:	f855 3b04 	ldr.w	r3, [r5], #4
 8000818:	4798      	blx	r3
 800081a:	3601      	adds	r6, #1
 800081c:	e7ee      	b.n	80007fc <__libc_init_array+0xc>
 800081e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000822:	4798      	blx	r3
 8000824:	3601      	adds	r6, #1
 8000826:	e7f2      	b.n	800080e <__libc_init_array+0x1e>
 8000828:	08000850 	.word	0x08000850
 800082c:	08000850 	.word	0x08000850
 8000830:	08000850 	.word	0x08000850
 8000834:	08000854 	.word	0x08000854

08000838 <_init>:
 8000838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800083a:	bf00      	nop
 800083c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800083e:	bc08      	pop	{r3}
 8000840:	469e      	mov	lr, r3
 8000842:	4770      	bx	lr

08000844 <_fini>:
 8000844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000846:	bf00      	nop
 8000848:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800084a:	bc08      	pop	{r3}
 800084c:	469e      	mov	lr, r3
 800084e:	4770      	bx	lr
